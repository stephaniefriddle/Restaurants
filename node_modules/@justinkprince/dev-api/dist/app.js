"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DevApi = void 0;

var _express = _interopRequireDefault(require("express"));

var _lokijs = _interopRequireDefault(require("lokijs"));

var _path = _interopRequireDefault(require("path"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var DevApi = /*#__PURE__*/function () {
  function DevApi(_ref) {
    var resources = _ref.resources,
        filepath = _ref.filepath,
        _ref$port = _ref.port,
        port = _ref$port === void 0 ? 3000 : _ref$port;

    _classCallCheck(this, DevApi);

    this.resources = resources;
    this.db = new _lokijs["default"](_path["default"].resolve(filepath), {
      persistenceMethod: "fs"
    });
    this.port = port;
    this.app = (0, _express["default"])();
    this.app.use(_express["default"].json());
    this.collections = {};
    this.filepath = filepath;
    this.initializeDatabase();
    this.initializeRoutes();
  }

  _createClass(DevApi, [{
    key: "initializeDatabase",
    value: function initializeDatabase() {
      var _this = this;

      this.db.loadDatabase({}, function () {
        _this.resources.forEach(function (resource) {
          var collection = _this.db.getCollection(resource);

          if (!collection) {
            collection = _this.db.addCollection(resource);
          }

          _this.collections[resource] = collection;
        });
      });
    }
  }, {
    key: "initializeRoutes",
    value: function initializeRoutes() {
      var _this2 = this;

      this.app.get("/", function (req, res) {
        res.send("Dev API");
      });
      this.resources.forEach(function (resource) {
        _this2.app.get("/".concat(resource), function (req, res) {
          var collection = _this2.db.getCollection(resource).data;

          res.json({
            data: collection
          });
        });

        _this2.app.get("/".concat(resource, "/:resourceId"), function (req, res) {
          var collection = _this2.collections[resource];
          var item = collection.by("id", req.params.resourceId);
          res.json({
            data: item
          });
        });

        _this2.app.post("/".concat(resource), function (req, res) {
          var requestData = req.body;

          if (!requestData.id) {
            requestData.id = uuid();
          }

          var collection = _this2.collections[resource];
          collection.insert(requestData);

          _this2.db.saveDatabase();

          res.json(requestData);
        });

        _this2.app.post("/".concat(resource, "/:resourceId"), function (req, res) {
          var requestData = req.body;
          var collection = _this2.collections[resource];

          var item = _objectSpread(_objectSpread({}, collection.by("id", req.params.resourceId)), requestData);

          collection.update(item);

          _this2.db.saveDatabase();

          res.json(item);
        });

        _this2.app["delete"]("/".concat(resource, "/:resourceId"), function (req, res) {
          var id = req.params.resourceId;

          _this2.collections[resource].findAndRemove({
            id: {
              $aeq: id
            }
          });

          _this2.db.saveDatabase();

          res.json({
            data: id
          });
        });
      });
    }
  }, {
    key: "listen",
    value: function listen() {
      var _this3 = this;

      this.app.listen(this.port, function () {
        console.log("Dev API listening at http://localhost:".concat(_this3.port));
      });
    }
  }]);

  return DevApi;
}();

exports.DevApi = DevApi;